# Find a working value for NDK_DIR
#
# For this to succeed at all, you MUST have created a custom toolchain in a
# downloaded copy of android-ndk-r16b. To create your own custom toolchain
# follow thise steps:
#
# Download android-ndk-r16b-linux-x86_64.zip from:
#
#   https://developer.android.com/ndk/downloads/
#
# Unzip it into a directory of your choosing. Our scripts default to looking in
# 
#   ~/src/android-ndk-r16n
#
# So if you have no other preference, you might put it there.
#
# Once unzipped, cd into the top-level directory and run the command:
#
#   build/tools/make_standalone_toolchain.py \
#     --arch arm --api 21 -v --install-dir=toolchains/custom-android
#
# This will build the custom toolchain that this script searches for.
#
# You can make this script succeed in various ways, and we list them
# from more-convenient to less.
#
# 1) install the 'mlocate' package and run 'sudo updatedb' after either
#    building or installing your own toolchain into 
#     
#      android-ndk-r16b/toolchains/custom-android
#
# 2) build your custom android toolchain at the default location of:
#
#      ~/src/android-ndk-r16b/toolchains/custom-android
#
# 3) set your NDK_DIR environment variable to the install location of the
#    android-ndk-r16b package.
#
# 5) Modify this script so the line beginning "# NDK_DIR=..." is uncommented
#    and sets NDK_DIR to the install location of android-ndk-r16b

export NDK_NAME="android-ndk-r16b"
export NDK_TOOLCHAIN_NAME="custom-android"

#NDK_DIR="/home/USER/src/${NDK_NAME}"

export NDK_TOOLCHAIN="${NDK_NAME}/toolchains/${NDK_TOOLCHAIN_NAME}"

if [[ -z "${NDK_DIR}" ]]; then
  which locate >/dev/null && LOC=$(which locate)
  if [[ -n "$LOC" ]]; then
    if $LOC -q --limit=1 */${NDK_TOOLCHAIN} >/dev/null; then
      NDK_FOUND="$( $LOC -q --limit=1 */${NDK_TOOLCHAIN} )"
      NDK_DIR="${NDK_FOUND%%/${NDK_NAME}/*}/${NDK_NAME}"
      echo Found: $NDK_DIR
    else
      echo "${NDK_NAME} not found by locate."
      echo "either install ${NDK_NAME}, or run updatedb"
      exit -1
    fi
  else
    if [[ -z "${NDK_DFL_DIR}" ]]; then
      NDK_DFL_DIR="~/src"
    fi
    NDK_DIR="${NDK_DFL_DIR}/${NDK_NAME}"
  fi
fi

export NDK_TOOLCHAIN_DIR=${NDK_DIR}/toolchains/${NDK_TOOLCHAIN_NAME}
